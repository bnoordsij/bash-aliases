alias lf='ls -F'
alias l1='ls -1'
alias ll='lsl'
alias lsl='ls -lAhF --color' # --group-directories-first'
alias lsd='ls -d */'

alias ]='clear'
alias e='echo'
alias ee='echo'
alias nn='vim'
alias nnch='nn +5 changelog.md'
alias nncj='nn +33 composer.json'
alias nncl='nn composer.lock'
alias nn.='nn .env'

alias k='kubectl'
alias kk='kubectl'
alias ekk='eksctl'

alias py='python3'

alias dcmp='docker-compose'
alias dcmpup='dcmp up -d' # for reference
alias dcmpdown='dcmp down' # for reference

alias dk='docker'
alias dkb='docker build .'
alias dkbt='docker build . -t'
dkbtr () {
  name="$*"
  docker build . -t $name && docker "$name";
}

alias wah='npm run watch'
alias nbm='npm run build'

alias nnchact='nn +5 changelogs/action.jobs-base.md'
alias nnchasw='nn +5 changelogs/aswatson-base.md'

# overwrite grep with latest ggrep
alias grep='ggrep'

alias week="date +%V"
alias now='date +"%T"'

alias tf='tofu'
#alias tf='terraform'
alias tfaaa='tf apply -auto-approve'
alias tfddd='tf apply -auto-approve -destroy'

alias chrom='~/dev/scripts/bin/chromedriver/chromedriver'
alias chrom95='~/dev/scripts/bin/chromedriver/chromedriver --port=9515'
alias init='~/dev/scripts/bin/rudder_init.sh'
alias search='~/dev/scripts/bin/rudder_search.sh'
#alias search='~/dev/scripts/ci/helper-scripts/rudder_search.sh'
alias rs='search'

alias rgg='rg ">>>>>>" -m 3 || echogn "rg all good"'
alias rgga='rg -. ">>>>>>" -m 3 || echogn "rg -. all good"'

#alias ps='phpstorm'

alias nnalias='nano ~/.bash_aliases'
alias nnini='sudo nano /usr/local/etc/php/8.1/php.ini'
alias nncliini='sudo nano /usr/local/etc/php/8.1/php-cli.ini'
alias nncini='sudo nano /usr/local/etc/php/8.1/php-cli.ini'

alias clrnwidart='nano +203 ./vendor/nwidart/laravel-modules/src/FileRepository.php'

alias gw='npm run watch'

alias rmbt='rm -fr bootstrap/cache/*'

alias rmlog='rm -f storage/logs/laravel.log'

alias forerr='echo "$dir" >> ../for_error'

## always require confirm on delete command
#alias rm='rm -i'
alias rmf='rm -rf '

alias mkhor='mkdir -p ./vendor/laravel/horizon/public'

kkns() {
  kk config set-context --current --namespace=$*
}

venv() {
  py -m venv venv
  source venv/bin/activate
}

uniqify() {
  sentence=$*
  echo "$sentence" | tr "[:upper:]" "[:lower:]" | tr ' ' '\n' | sort | uniq
}

## assumes "$source" is set
mvr() {
  mv_file=$0
  mv "$source$mv_file" "$mv_file"
}

cpr() {
  cp_file=$0
  echo "$source1"
  cp "$source1$cp_file" "$cp_file"
}

BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
ORANGE='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echobk() { tmp=$*; printf "${BLACK}%s${NC}\n" "$tmp"; }
echord() { tmp=$*; printf "${RED}%s${NC}\n" "$tmp"; }
echogn() { tmp=$*; printf "${GREEN}%s${NC}\n" "$tmp"; }
echoor() { tmp=$*; printf "${ORANGE}%s${NC}\n" "$tmp"; }
echobu() { tmp=$*; printf "${BLUE}%s${NC}\n" "$tmp"; }
echopu() { tmp=$*; printf "${PURPLE}%s${NC}\n" "$tmp"; }
echocn() { tmp=$*; printf "${CYAN}%s${NC}\n" "$tmp"; }
echoyw() { tmp=$*; printf "${YELLOW}%s${NC}\n" "$tmp"; }

alias forgtt='for dir in $(lsd); do cd $dir && echopu $dir; gtt; ..; done;'
alias forgtrh='for dir in $(lsd); do cd $dir && echopu $dir; gtrh; gtchd; gtpl; ..; done;'
alias forgtpl='for dir in $(lsd); do cd $dir && echopu $dir; gtpl; ..; done;'
alias forgtups='for dir in $(lsd); do cd $dir && echopu $dir; gtups; ..; done;'
alias forfun='for dir in $(lsd); do cd $dir && echopu $dir; tmpfun; ..; done;'
alias forfile='for dir in $(cat $lsd_file); do cd $dir && echopu $dir; tmpfun; ..; done;'

# still working on this one
forf () {
  for dir in $(lsd); #(cat $lsd_file)
  do
    cd $dir;
    echocn $dir;
    $($*);
    cd -;
  done
}

